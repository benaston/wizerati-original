.rotating-button-container {
    display: inline-block;
    position: relative;
}
.rotating-button-container.test, .rotating-button-container.test * {
    box-shadow: 0 0 0 1px inset;
}
.rotating-button-container::after {
    content: 'You must use a size class with this container class.';
}
.rotating-button-container.small::after, 
.rotating-button-container.medium::after, 
.rotating-button-container.large::after, 
.rotating-button-container.x-large::after,
.rotating-button-container.long::after {
    content: none; /* Clear the error message. */
}
.rotating-button-container.small {
    width: 67px; /* Empirical. */    
    height: 67px;
}
.rotating-button-container.medium {
    width: 100px;
    height: 100px;
}
.rotating-button-container.large {
    width: 100px;
    height: 100px;
}
.rotating-button-container.x-large {
    width: 100px;
    height: 100px;
}
.rotating-button-container.long {
    width: 67px;
    height: 67px;
}
.rotating-button-container.long.centered-label {
    width: 200px;
}
.rotating-button-container > .icon {
    position: absolute;
    display: inline-block;
    width: 100%;
    left: 0;
    font-family: helvetica-pro-light;
    color: rgba(0, 122, 255, 1);
    pointer-events: none;
    line-height: normal; /* Normal gives a better vertical centering on OSX. */
    /* Enables the label to be transparent, enabling the underlying button to be clicked. */
}

.rotating-button-container > .icon.black {
    color: black;
}
.rotating-button-container > .btn:active ~ .icon {
    color: #094e96;
}
.rotating-button-container > .btn:hover ~ .icon {
    color: #0063cc;
}
.rotating-button-container > .btn[data-is-selected='true'] ~ .icon /*.content*/ {
    border-radius: 5px;
    background: rgba(0,122,255,1);
    color: white;
}
.rotating-button-container > .icon.lower {
    pointer-events: auto;
}
/* This is because we have pointer events none set on the .icon, so we cannot detect hovering on the element itself. */
.rotating-button-container > .btn:hover ~ .icon {
    text-decoration: underline;
}
.rotating-button-container > .icon.lower:hover {
    text-decoration: underline; 
}
.rotating-button-container.small > .icon {
    font-size: .9rem;    
    top: calc(50% - .45rem);
}
.rotating-button-container.small > .icon.lower {
    top: calc(100% - .65rem); /* Empirical. Repeated due to specificity. */
    font-size: .9rem;
}
.rotating-button-container.medium > .icon {
    font-size: 1rem;
    top: calc(50% - .5rem);
}
.rotating-button-container.medium > .icon.lower {
    top: calc(100% - .65rem); /* Empirical. Repeated due to specificity. */
    font-size: 1rem;
}
.rotating-button-container.large > .icon {
    font-size: 1.2rem;
    top: calc(50% - .6rem);
}
.rotating-button-container.large > .icon.lower {
    top: calc(100% - .65rem); /* Empirical. Repeated due to specificity. */
    font-size: 1.2rem;
}
.rotating-button-container.x-large > .icon {
    font-size: 1.25rem;
    top: calc(50% - .625rem);
}
.rotating-button-container.x-large > .icon.lower {
    top: calc(100% - .65rem); /* Empirical. Repeated due to specificity. */
    font-size: 1.25rem;
}
.rotating-button-container.long > .icon {
    font-size: 2rem;
    top: calc(50% - 1rem);
}
/* Label for centered label covers the area taken by the containing box. */
.rotating-button-container.long.centered-label > .icon {
    font-size: 1rem;
    top: 0;
    height: 100%;
    line-height: 67px;
}
.rotating-button-container.long > .icon.lower {
    top: calc(50% - .6rem); /* Empirical. Repeated due to specificity. */
    left: calc(-100% - 192px);
    font-size: 1.2rem;
    width: 260px;
    text-align: left;
    overflow: hidden;
    text-overflow: ellipsis;
    word-break: initial;
    white-space: nowrap;
}
.rotating-button-container.long.centered-label > .icon.lower {
    display: none;
}
.rotating-button-container > .btn + .focus-indicator {
    pointer-events: none;
}
.rotating-button-container > .btn:enabled:focus+.focus-indicator::after {
    content: ' ';
    display: block;
    background-color: transparent;
    box-shadow: 0 0 1px 1px rgba(0, 122, 255, .1) inset;
    position: absolute;
    right: -4px;
    bottom: -4px;
}
.rotating-button-container.small > .btn {
    width: 67px;
    height: 67px;
    border-radius: 67px;
}
.rotating-button-container.medium > .btn, 
.rotating-button-container.large > .btn,
.rotating-button-container.x-large > .btn {
    width: 100px;
    height: 100px;
    border-radius: 100px;
}
.rotating-button-container.long.centered-label > .btn {
    left: calc(50% - 33px);
}
.rotating-button-container > .btn:hover::after {
    text-decoration: underline;
}
.rotating-button-container.small > .btn:enabled:focus+.focus-indicator::after,
.rotating-button-container.long > .btn:enabled:focus+.focus-indicator::after {
    width: 75px;
    height: 75px;
    border-radius: 75px;
}
.rotating-button-container.long.centered-label > .btn:enabled:focus+.focus-indicator::after {
    left: calc(50% - 37px);
}
.rotating-button-container.medium > .btn:enabled:focus+.focus-indicator::after, 
.rotating-button-container.large > .btn:enabled:focus+.focus-indicator::after,
.rotating-button-container.x-large > .btn:enabled:focus+.focus-indicator::after {
    width: 108px;
    height: 108px;
    border-radius: 108px;
}
.rotating-button-container > .btn.bordered {
    border: 1px solid rgba(0,122,255,1);
}
.rotating-button-container > .btn.bordered:hover {
    border-color: #0063cc;
}
.rotating-button-container > .btn.bordered:active {
    border-color: #094e96;
}
.rotating-button-container > .btn {
    -webkit-transition: border-color .1s ease-in-out;    
}
.rotating-button-container > .btn[data-is-waiting='true'] {
    border-color: rgba(0,0,0,0);
    box-shadow: 0 2px 0 2px rgba(0, 0, 0, .05) inset;
    -webkit-animation-duration: 2.5s;
    -webkit-animation-name: rotate;
    -webkit-animation-iteration-count: infinite;
    -webkit-animation-timing-function: ease-out-in;
}
.ionicons {
    font-family: ionicons !important;
}